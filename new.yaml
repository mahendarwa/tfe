import os
import re
import xml.etree.ElementTree as ET
import subprocess

# Hardcoded environment
executionenv = "QA"
env_id = f"_{executionenv}" if executionenv.upper() in ('DEV2', 'DEV', 'INT', 'QA') else ""

# Teradata credentials
host = os.getenv("TERADATA_HOST")
user = os.getenv("TERADATA_USER")
pwd = os.getenv("TERADATA_PASSWORD")

if not all([host, user, pwd]):
    print("‚ùå Missing TERADATA environment variables")
    exit(1)

# Paths
base_path = "GBS_DAE_OSS/Teradata/src"
update_xml_path = os.path.join(base_path, "update.xml")

# Parse update.xml
tree = ET.parse(update_xml_path)
root = tree.getroot()

sql_files = [elem.attrib["file"] for elem in root.findall(".//include")]

if not sql_files:
    print("‚ö†Ô∏è No SQL files found in update.xml")
    exit(0)

print("üìÇ SQL files to execute:")
for file in sql_files:
    print(f"  ‚Ä¢ {file}")

# Process each SQL file
for sql_file in sql_files:
    full_path = os.path.join(base_path, sql_file)
    if not os.path.exists(full_path):
        print(f"‚ö†Ô∏è Skipping missing SQL file: {full_path}")
        continue

    print("\n" + "="*80)
    print(f"üìÑ Processing: {sql_file}")
    print("-" * 80)

    # Replace placeholder
    with open(full_path, "r") as f:
        content = f.read()
    final_sql = re.sub(r"\$\{env\.id\.upper\}", env_id.upper(), content)

    print(f"üßæ Final SQL content:\n{final_sql}\n")

    # Write to final script file
    with open("final_script.sql", "w") as f:
        f.write(final_sql)

    # BTEQ execution
    bteq_cmd = f"""
bteq <<EOF
.logon {host}/{user},{pwd};
.run file=final_script.sql;
.logoff;
.quit;
EOF
"""
    result = subprocess.run(bteq_cmd, shell=True, text=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    print("üì§ BTEQ Output:\n", result.stdout)
    if result.returncode != 0:
        print("‚ùå BTEQ failed:", result.stderr)
        exit(result.returncode)

print("\n‚úÖ All SQLs executed successfully.")
