name: Prod PAT

on:
  workflow_dispatch:
    inputs:
      pfnz: {description: 'pfnz', required: true, type: boolean}
      pfid: {description: 'pfid', required: true, type: boolean}
      pfph: {description: 'pfph', required: true, type: boolean}
      pfth: {description: 'pfth', required: true, type: boolean}
      pfsg: {description: 'pfsg', required: true, type: boolean}
      pfhk: {description: 'pfhk', required: true, type: boolean}
      pfau: {description: 'pfau', required: true, type: boolean}
      pfbp: {description: 'pfbp', required: true, type: boolean}
      omau: {description: 'omau', required: true, type: boolean}
      pfgb: {description: 'pfgb', required: true, type: boolean}
      pffi: {description: 'pffi', required: true, type: boolean}
      pfra: {description: 'pfra', required: true, type: boolean}
      pfpt: {description: 'pfpt', required: true, type: boolean}
      pfes: {description: 'pfes', required: true, type: boolean}
      pffr: {description: 'pffr', required: true, type: boolean}
      pfde: {description: 'pfde', required: true, type: boolean}
      pfch: {description: 'pfch', required: true, type: boolean}
      pfit: {description: 'pfit', required: true, type: boolean}
      omca: {description: 'omca', required: true, type: boolean}
      pfca: {description: 'pfca', required: true, type: boolean}
      pfcl: {description: 'pfcl', required: true, type: boolean}
      pfco: {description: 'pfco', required: true, type: boolean}
      pfpr: {description: 'pfpr', required: true, type: boolean}
      pfbr: {description: 'pfbr', required: true, type: boolean}
      pfmx: {description: 'pfmx', required: true, type: boolean}
      pfxu: {description: 'pfxu', required: true, type: boolean}
      pfus: {description: 'pfus', required: true, type: boolean}

jobs:
  PAT:
    runs-on: prod14-runner
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Kill and Restart PAT Services
        run: |
          envs=()
          [[ "${{ github.event.inputs.pfnz }}" == "true" ]] && envs+=("pfnz")
          [[ "${{ github.event.inputs.pfid }}" == "true" ]] && envs+=("pfid")
          [[ "${{ github.event.inputs.pfph }}" == "true" ]] && envs+=("pfph")
          [[ "${{ github.event.inputs.pfth }}" == "true" ]] && envs+=("pfth")
          [[ "${{ github.event.inputs.pfsg }}" == "true" ]] && envs+=("pfsg")
          [[ "${{ github.event.inputs.pfhk }}" == "true" ]] && envs+=("pfhk")
          [[ "${{ github.event.inputs.pfau }}" == "true" ]] && envs+=("pfau")
          [[ "${{ github.event.inputs.pfbp }}" == "true" ]] && envs+=("pfbp")
          [[ "${{ github.event.inputs.omau }}" == "true" ]] && envs+=("omau")
          [[ "${{ github.event.inputs.pfgb }}" == "true" ]] && envs+=("pfgb")
          [[ "${{ github.event.inputs.pffi }}" == "true" ]] && envs+=("pffi")
          [[ "${{ github.event.inputs.pfra }}" == "true" ]] && envs+=("pfra")
          [[ "${{ github.event.inputs.pfpt }}" == "true" ]] && envs+=("pfpt")
          [[ "${{ github.event.inputs.pfes }}" == "true" ]] && envs+=("pfes")
          [[ "${{ github.event.inputs.pffr }}" == "true" ]] && envs+=("pffr")
          [[ "${{ github.event.inputs.pfde }}" == "true" ]] && envs+=("pfde")
          [[ "${{ github.event.inputs.pfch }}" == "true" ]] && envs+=("pfch")
          [[ "${{ github.event.inputs.pfit }}" == "true" ]] && envs+=("pfit")
          [[ "${{ github.event.inputs.omca }}" == "true" ]] && envs+=("omca")
          [[ "${{ github.event.inputs.pfca }}" == "true" ]] && envs+=("pfca")
          [[ "${{ github.event.inputs.pfcl }}" == "true" ]] && envs+=("pfcl")
          [[ "${{ github.event.inputs.pfco }}" == "true" ]] && envs+=("pfco")
          [[ "${{ github.event.inputs.pfpr }}" == "true" ]] && envs+=("pfpr")
          [[ "${{ github.event.inputs.pfbr }}" == "true" ]] && envs+=("pfbr")
          [[ "${{ github.event.inputs.pfmx }}" == "true" ]] && envs+=("pfmx")
          [[ "${{ github.event.inputs.pfxu }}" == "true" ]] && envs+=("pfxu")
          [[ "${{ github.event.inputs.pfus }}" == "true" ]] && envs+=("pfus")

          for ENV in "${envs[@]}"; do
            echo "Restarting PAT service for: \$ENV"
            ssh -o StrictHostKeyChecking=no \${ENV}sup3@daylnxcpsp023.enterprisenet.org << EOF
            echo "Checking process on port for \$ENV..."
            PORT=8152
            pid=\$(lsof -i :\$PORT -sTCP:LISTEN -t)
            if [ -n "\$pid" ]; then
              kill -9 \$pid && echo "Killed PID \$pid"
            else
              echo "No process found"
            fi
            cd /\$ENV/bin || exit
            nohup ./startPATservice_\$ENV.sh > /dev/null 2>&1 &
            EOF
          done
