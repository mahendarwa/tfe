name: "PAT QA Docker"

on:
  workflow_dispatch:

jobs:
  checkout-014:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: "trn/1.0/controlled"

  server-014:
    runs-on: self-hosted
    needs: checkout-014
    steps:
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Configure Artifactory Credentials
        run: |
          echo "ARTIFACTORY_USER=${{ secrets.ARTIFACTORY_USER }}" >> $GITHUB_ENV
          echo "ARTIFACTORY_PASS=${{ secrets.ARTIFACTORY_PASS }}" >> $GITHUB_ENV

      - name: Build and Deploy on Server 014
        run: |
          cd ddrgenerator
          export JAVA_HOME=/usr/local/jdk11
          chmod 755 gradlew
          ./gradlew clean build -x test

          docker kill ddrgenerator || true
          docker rm ddrgenerator || true
          docker image rm -f ddrgenerator || true

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/ddrgenerator/
          docker build -t ddrgenerator --file Dockerfile .

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/cicd/docker-compose/qa/
          docker-compose -f docker-compose.primary.yml up -d

  checkout-015:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: "trn/1.0/controlled"

  server-015:
    runs-on: self-hosted
    needs: checkout-015
    steps:
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Configure Artifactory Credentials
        run: |
          echo "ARTIFACTORY_USER=${{ secrets.ARTIFACTORY_USER }}" >> $GITHUB_ENV
          echo "ARTIFACTORY_PASS=${{ secrets.ARTIFACTORY_PASS }}" >> $GITHUB_ENV

      - name: Build and Deploy on Server 015
        run: |
          cd ddrgenerator
          export JAVA_HOME=/usr/local/jdk11
          chmod 755 gradlew
          ./gradlew clean build -x test

          docker kill ddrgenerator || true
          docker rm ddrgenerator || true
          docker image rm -f ddrgenerator || true

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq015/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/ddrgenerator/
          docker build -t ddrgenerator --file Dockerfile .

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq015/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/cicd/docker-compose/qa/
          docker-compose -f docker-compose.primary.yml up -d

  checkout-016:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: "trn/1.0/controlled"

  server-016:
    runs-on: self-hosted
    needs: checkout-016
    steps:
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Configure Artifactory Credentials
        run: |
          echo "ARTIFACTORY_USER=${{ secrets.ARTIFACTORY_USER }}" >> $GITHUB_ENV
          echo "ARTIFACTORY_PASS=${{ secrets.ARTIFACTORY_PASS }}" >> $GITHUB_ENV

      - name: Build and Deploy on Server 016
        run: |
          cd ddrgenerator
          export JAVA_HOME=/usr/local/jdk11
          chmod 755 gradlew
          ./gradlew clean build -x test

          docker kill ddrgenerator || true
          docker rm ddrgenerator || true
          docker image rm -f ddrgenerator || true

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq016/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/ddrgenerator/
          docker build -t ddrgenerator --file Dockerfile .

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq016/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/cicd/docker-compose/qa/
          docker-compose -f docker-compose.primary.yml up -d

  server-013:
    runs-on: self-hosted
    needs: server-014
    steps:
      - name: Copy Files to Server 013
        run: |
          ssh-agent bash -c 'ssh-add ~/.ssh/vscode; scp -o StrictHostKeyChecking=no -i ~/.ssh/vscode -r /home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/* bambscm1@daylnxcpsq013.enterprisenet.org:/home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/'

      - name: Build and Deploy on Server 013
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/vscode bambscm1@daylnxcpsq013.enterprisenet.org '
          cd /home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/ddrgenerator
          export JAVA_HOME=/usr/local/jdk11
          chmod 755 gradlew
          ./gradlew clean build -x test

          docker kill ddrgenerator
          docker rm ddrgenerator
          docker image rm -f ddrgenerator

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/ddrgenerator
          docker build -t ddrgenerator --file Dockerfile .

          cd /home/bambscm1/adlm_jenkins/daylnxcpsq014/workspace/Consumer_Panel_Services_Home/Github/PAT/pat-docker-qa/cicd/docker-compose/qa
          docker-compose -f docker-compose.primary.yml up -d
          '
