name: Kill and Restart PAT Services

on:
  workflow_dispatch:
    inputs:
      pfnz: { description: 'pfnz', required: true, type: boolean }
      pfid: { description: 'pfid', required: true, type: boolean }
      pfth: { description: 'pfth', required: true, type: boolean }
      pfph: { description: 'pfph', required: true, type: boolean }

jobs:
  kill_and_restart:
    runs-on: [self-hosted]
    steps:
      - name: Run PAT restart for selected environments
        env:
          PFNZ: ${{ github.event.inputs.pfnz }}
          PFID: ${{ github.event.inputs.pfid }}
          PFTH: ${{ github.event.inputs.pfth }}
          PFPH: ${{ github.event.inputs.pfph }}
        run: |
          declare -A CONFIGS=(
            [pfnz]="pfnzsup3|daylnxcpsp023|8152"
            [pfid]="pfidsup3|daylnxcpsp023|8159"
            [pfth]="pfthsup3|daylnxcpsp023|8161"
            [pfph]="pfphsup3|daylnxcpsp023|8160"
          )

          for ENV in "${!CONFIGS[@]}"; do
            VAR_NAME=$(echo "$ENV" | tr '[:lower:]' '[:upper:]')
            if [[ "${!VAR_NAME}" == "true" ]]; then
              IFS='|' read -r ADMINUSER SERVER PORT <<< "${CONFIGS[$ENV]}"

              ssh -o StrictHostKeyChecking=no ${ADMINUSER}@${SERVER}.enterprisenet.org bash -s <<EOF
          echo "[INFO] Checking for process on port ${PORT}"
          pid=\$(lsof -i :${PORT} -sTCP:LISTEN -t)
          if [ -n "\$pid" ]; then
            echo "[INFO] Found PID: \$pid"
            kill -9 \$pid
            status=\$?
            if [ \$status -ne 0 ]; then
              echo "[ERROR] Failed to kill process \$pid (exit \$status)"
              exit 1
            else
              echo "[INFO] Killed process \$pid successfully"
            fi
          else
            echo "[INFO] No process found listening on port ${PORT}"
          fi
          
          echo "[INFO] Switching to /${ENV}/bin"
          cd /${ENV}/bin || { echo "[ERROR] Directory /${ENV}/bin not found"; exit 1; }
          
          echo "[INFO] Making script executable"
          chmod +x ./startPATservice_${ENV}.sh
          
          echo "[INFO] Starting PAT service in background"
          nohup ./startPATservice_${ENV}.sh > start.log 2>&1 &
          
          echo "[INFO] Waiting 3s to let service log something"
          sleep 3
          
          echo "[INFO] Tailing start.log output"
          tail -n 10 start.log || echo "[WARN] No log file created or empty"
          EOF
          
                      fi
                    done
